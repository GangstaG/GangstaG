{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/movieService.js","services/genreService.js","utils/paginate.js","components/searchBox.jsx","components/movies.jsx","components/select.jsx","components/common/input.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["init","log","error","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","email","password","a","http","data","localStorage","setItem","console","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","user","jwtDecode","ex","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","onClick","label","key","Component","TableBody","renderCell","item","content","_","createKey","_id","Table","Like","classes","liked","style","cursor","MoviesTable","movie","Link","to","title","onLike","deleteColumn","onDelete","auth","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","currrentPage","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Select","options","rest","htmlFor","option","Input","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","NavLink","Fragment","LoginForm","username","location","window","from","pathname","Redirect","register","RegisterForm","userService","Logout","ProtectedRoute","component","render","Route","App","Switch","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","process","REACT_APP_NAME","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.e472f95c.chunk.js","sourcesContent":["function init() {\r\n    }\r\nfunction log(error) {\r\n    //console.error(error);\r\n    \r\n}\r\nexport default {\r\n    init,\r\n    log\r\n}","import axios from 'axios'; \r\nimport logger from './logService';\r\n//import auth from './authService';\r\nimport {toast} from 'react-toastify';\r\n\r\n//axios.defaults.headers.common ['x-auth-token'] = auth.getJwt();\r\naxios.interceptors.response.use(null, error =>{\r\nconst expectedError = \r\n  error.response &&\r\n   error.response.status >= 400 &&\r\n  error.response.status <500;\r\n\r\nif (!expectedError) {\r\nlogger.log (error);\r\n  toast.error ('An unexpected error occured.');\r\n }\r\n\r\n  return Promise.reject (error);\r\n});\r\nfunction setJwt (jwt) {\r\n  axios.defaults.headers.common ['x-auth-token'] =jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n\r\n}\r\n\r\n\r\n\r\n","import jwtDecode from 'jwt-decode';\r\nimport http from './httpService';\r\nimport {apiUrl} from '../config.json';\r\n \r\nconst apiEndpoint =apiUrl + '/auth';\r\nhttp.setJwt(getJwt());\r\nexport async function login (email, password) {\r\nconst {data : jwt} = await http.post (apiEndpoint, {email, password});// email & password: 2 properties in the object\r\nlocalStorage.setItem ('tokenKey', jwt);//get the token n store it in the local storage\r\nconsole.log(jwt)\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('tokenKey');\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem('tokenKey', jwt);  \r\n}\r\n\r\nexport function getCurrentUser() { \r\n    try {\r\n        const jwt = localStorage.getItem(\"tokenKey\");\r\n        const user = jwtDecode(jwt);//decode 2 get the current user object\r\n        return user\r\n        console.log(user);//verifyin' the user object on the console\r\n        }\r\n      catch (ex) {\r\n      return null;\r\n      }\r\n}\r\nexport function getJwt () {\r\nreturn localStorage.getItem(\"tokenKey\"); \r\n}\r\n\r\nexport default {\r\n    login,\r\n    loginWithJwt,\r\n    logout,\r\n    getCurrentUser,\r\n    getJwt\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\n//columns:array => ui\r\n//sortColumn:object => ui\r\n//onSort:function => ui\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn); //raisin' the sort event\r\n    };\r\n    renderSortIcon=column=>{\r\n        const{ sortColumn } = this.props;\r\n        if (column.path !== sortColumn.path) return null;\r\n        if (sortColumn.order=== 'asc') return <i className=\"fa fa-sort-asc\"></i>\r\n        return <i className=\"fa fa-sort-desc\"></i>;\r\n    };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map (\r\n            (\r\n              column //using the map method 2 render th elts\r\n            ) => (\r\n              <th className=\"clickable\"\r\n                key = {column.path || column.key}\r\n                onClick={() => this.raiseSort(column.path)}\r\n              >\r\n                {column.label} {this.renderSortIcon(column)}\r\n              </th>\r\n            )\r\n          )}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nclass TableBody extends Component {\r\n    renderCell=(item,column)=>{\r\nif (column.content) return column.content(item)\r\nreturn _.get(item,column.path);\r\n    };\r\n    createKey=(item,column)=>{\r\n        return item._id+(column.path || column.key);\r\n\r\n    }\r\n    render(){\r\n        const {data,columns} =this.props;\r\n\r\n    return (\r\n        <tbody>\r\n        {data.map(item =>(\r\n        <tr key={item._id}>\r\n            {columns.map(column =>(\r\n            <td key={this.createKey(item,column)}>\r\n                {this.renderCell(item,column)}\r\n                </td>\r\n            ))}\r\n        \r\n        </tr>\r\n        ))}\r\n        </tbody>\r\n        );\r\n          \r\n }\r\n}\r\n \r\nexport default TableBody;","import React, { Component } from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\n\r\nconst Table =({columns, sortColumn, onSort, data}) => {\r\n // 4 props define the interface of the table component\r\n\r\n   return (<table className=\"table\">\r\n   <TableHeader\r\n   columns = {columns}//passing columns\r\n   sortColumn = {sortColumn}//passing sortColumns\r\n   onSort = {onSort}//passing onSort\r\n   />\r\n   <TableBody columns = {columns} data = {data} />\r\n    </table> );\r\n    }\r\n\r\nexport default Table ;","import React, { Component } from 'react';\r\nconst Like  = props => {\r\n    let classes=\"fa fa-heart\";\r\n        if(!props.liked) classes+=\"-o\";//appending\r\n        return (\r\n        <i onClick=\r\n        {props.onClick} \r\n        style={{cursor:'pointer'}} \r\n        className={classes}aria-hidden=\"true\">\r\n        </i>);\r\n    \r\n}\r\n export default Like ;\r\n","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nimport {Link} from \"react-router-dom\"\r\nimport Table from './common/table';\r\nimport Like from './common/like';\r\n\r\nclass MoviesTable extends Component {\r\n    columns=[\r\n{path:'title', label:'Title', content:movie=> \r\n<Link to= {`/movies/${movie._id}`}>{movie.title}</Link>},\r\n{path:'genre.name', label:'Genre'},\r\n{path:'numberInStock', label:'Stock'},\r\n{path:'dailyRentalRate', label:'Rate'},\r\n{key:'like',content:movie=>\r\n(<Like liked={movie.liked} onClick=\r\n    {()=>this.props.onLike(movie)}/>\r\n)},\r\n];\r\ndeleteColumn = {\r\n    \r\n        key:'delete',\r\n    content: movie => (\r\n    <button\r\n    onClick={()=>this.props.onDelete(movie)} \r\n    className=\"btn btn-danger btn-sm\">\r\n        Delete\r\n        </button>\r\n\r\n    )\r\n} \r\nconstructor () {\r\n  super();  \r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin)\r\n    this.columns.push(this.deleteColumn);\r\n    \r\n    }\r\n\r\n    render() {\r\n        const {movies, onSort, sortColumn}\r\n        =this.props;//props aint a parameter here\r\n    \r\n    return (\r\n        <Table columns={this.columns} data={movies}\r\n        sortColumn={sortColumn} onSort={onSort} />\r\n    );\r\n     \r\n       \r\n    };\r\n}\r\n export default MoviesTable;","import React, { Component } from 'react';\r\nconst ListGroup=props=>{\r\n    const {items,textProperty,valueProperty,selectedItem,onItemSelect}=props;\r\nreturn <ul className=\"list-group\">{items.map(item=>\r\n        <li onClick={()=> onItemSelect(item)}\r\n         key={item[valueProperty]} className={item===selectedItem?\"list-group-item active\": \"list-group-item\"}>{item[textProperty]}</li>\r\n    )}\r\n        \r\n    </ul>;\r\n    \r\n\r\n\r\n};\r\nListGroup.defaultProps={\r\ntextProperty:\"name\",\r\nvalueProperty:\"_id\"\r\n};\r\nexport default ListGroup;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nconst Pagination  = (props) => {\r\n    const {itemsCount,pageSize,currentPage,onPageChange}=props;\r\n    //console.log(currrentPage);\r\n    const pagesCount=Math.ceil(itemsCount/pageSize);//Math.ceil to convert to integer\r\n    //console.log(pagesCount);\r\n    if(pagesCount===1)return null;\r\n   const pages= _.range(1,pagesCount +1)\r\n   \r\n\r\n\r\n    return <nav>\r\n        <ul className=\"pagination\">\r\n            {pages.map(page=>(//mappin' the array to list\r\n                <li key={page}className={page===currentPage ? 'page-item active': 'page-item'}>\r\n                    <a className=\"page-link\" onClick={()=>onPageChange(page)}>{page}</a>\r\n                </li>//onPageChange event is raised when a new page is clicked\r\n            ))}\r\n             </ul>\r\n    </nav>;\r\n}\r\n \r\nexport default Pagination ;","import http from './httpService';\r\nimport {apiUrl} from '../config.json';\r\n \r\nconst apiEndpoint =apiUrl + '/movies';\r\nfunction movieUrl(id) {\r\n   return `${apiEndpoint}/${id}`; \r\n}\r\n\r\nexport function getMovies() {\r\nreturn  http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId));\r\n    }\r\n   export function saveMovie (movie) {\r\n      if (movie._id){\r\n          const body = {...movie};\r\n          delete body._id; \r\n          return http.put(movieUrl(movie._id),body);\r\n      }\r\n      return http.post(apiEndpoint, movie);\r\n   } \r\n    \r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl (movieId));//appendin' the movieId\r\n}","import http from './httpService';\r\nimport {apiUrl} from '../config.json';\r\nexport function getGenres() {\r\n   return http.get (apiUrl + '/genres');\r\n  }","import _ from 'lodash';\r\nexport function paginate(items,pageNumber,pageSize){\r\n const startIndex =(pageNumber-1)*pageSize;//to calculate the starting index of the items of pageNumber\r\n return _(items)\r\n .slice(startIndex).take(pageSize).value();//converting the array to a lodash wrapper object\r\n //._slice(items,startIndex)//slice will slice the array from index\r\n// _.take()//pickin items from the current page \r\n\r\n}","import React from 'react';\r\n\r\nconst SearchBox = ({value, onChange}) => {\r\n    return (\r\n        <input\r\n        type='text'\r\n        name='query'\r\n        className='form-control my-3'//margin\r\n        placeholder='Search...'\r\n        value = {value}\r\n        onChange = {e => onChange (e.currentTarget.value)}\r\n        />\r\n        );\r\n\r\n};\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\r\nimport {toast} from 'react-toastify';\r\nimport MoviesTable from './moviesTable';\r\nimport ListGroup  from './common/listGroup';\r\nimport Pagination from './common/pagination';\r\nimport {Link} from 'react-router-dom';\r\nimport{getMovies, deleteMovie} from '../services/movieService';\r\nimport { getGenres } from '../services/genreService';\r\nimport{paginate} from'../utils/paginate';\r\nimport _ from 'lodash';\r\nimport SearchBox from './searchBox';\r\nclass  Movies extends Component {\r\n    state={\r\n        movies:[],\r\n        genres:[],\r\n        currrentPage:1,\r\n        pageSize:4,//4 movies on each page, pagination 2 render 3 pages\r\n        searchQuery:'',\r\n        selectedGenre: null,\r\n        sortColumn : {path:'title', order:'asc'}\r\n   };\r\nasync componentDidMount(){\r\nconst {data} = await getGenres();//2 get the data\r\nconst genres=[{_id:'',name:'All Genres'},...data]\r\nconst {data:movies} = await getMovies();\r\nthis.setState ({movies,genres});\r\n}\r\n    handleDelete = async movie => {\r\n        const originalMovies= this.state.movies;\r\n        const movies=originalMovies.filter(m=>m._id!==movie._id);\r\n        this.setState({movies});\r\n     try {\r\n        await deleteMovie(movie._id);\r\n       }\r\n   catch (ex) {\r\n    if (ex.response && ex.response.status === 404)//returnin' a 404 error\r\n    toast.error('This movies has already been deleted');\r\n   \r\n    this.setState ({movies: originalMovies});// undoin' the changes\r\n   } \r\n    \r\n\r\n\r\n    };\r\n    handleLike=(movie)=> {\r\n        //console.log('Like clicked', movie);\r\n        const movies=[...this.state.movies];\r\n        const index=movies.indexOf(movie);\r\n        movie[index]={...movies[index]};\r\n        movies[index].liked=!movies[index].liked;//true or false\r\n        this.setState({movies});//this code is to update the ui or view\r\n\r\n    };\r\n    handlePageChange=page=>{\r\n      //console.log(page);\r\n      this.setState({currentPage:page});//setting the current page will cause new renderin'\r\n    };\r\n    handleGenreSelect= genre => {\r\n       this.setState({selectedGenre:genre, searchQuery:'', currentPage:1});//page reset to 1 whenever a filter is changed\r\n    };\r\n    handleSort=sortColumn=>{\r\n        this.setState({sortColumn});\r\n    };\r\n    handleSearch = query => {\r\n    this.setState({searchQuery: query, selectedGenre: null, currentPage:1 });\r\n };\r\n\r\n    getPagedData = () => {\r\n        const {\r\n        pageSize,\r\n        currentPage,\r\n        sortColumn,\r\n        searchQuery,\r\n        selectedGenre,\r\n        movies:allMovies\r\n        } = this.state;\r\n\r\n        let filtered = allMovies;\r\n        if (searchQuery)\r\n         filtered = allMovies.filter(m=>\r\n            m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n        );\r\n        else if (selectedGenre && selectedGenre._id)\r\n        filtered= allMovies.filter(m=>m.genre._id === selectedGenre._id);\r\n        \r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n        const movies = paginate(sorted,currentPage,pageSize);\r\n        return {totalCount: filtered.length, data: movies};\r\n        };\r\n    render() {\r\n        const {length:count} = this.state.movies;\r\n        \r\n        const {pageSize, currentPage, sortColumn}= this.state;\r\n        const {user}= this.props;\r\n\r\n       if (count===0) return <p>No movies in the database</p>;\r\n       const { totalCount, data: movies} = this.getPagedData();\r\n       \r\n        return (\r\n            <div className=\"row\">\r\n            <div className=\"col-3\">\r\n                <ListGroup \r\n                items={this.state.genres}\r\n                selectedItem={this.state.selectedGenre}\r\n                onItemSelect={this.handleGenreSelect}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                {user && ( <Link\r\n                 to=\"/movies/new\"\r\n                className=\"btn btn-warning\"\r\n                style={{marginBottom : 20}}\r\n                >\r\n                New Movie\r\n                </Link>\r\n        )}\r\n               <p>Showing {totalCount} movies in the database.</p>\r\n                <SearchBox  onChange={this.handleSearch}/>\r\n                <MoviesTable\r\n                 movies={movies}//passin' the list of  movies\r\n                 sortColumn={sortColumn}//makin' sure its a right sort order when its pages r initialized\r\n                 onLike={this.handleLike}\r\n                 onDelete={this.handleDelete}\r\n                 onSort={this.handleSort}\r\n                 />\r\n            <Pagination\r\n             itemsCount={totalCount}//to properly render a number of pages\r\n             pageSize={pageSize}//pass pageSize as a prop\r\n             currentPage={currentPage}//pass currentPage as a prop\r\n             onPageChange={this.handlePageChange}\r\n             />\r\n             </div>\r\n             </div>\r\n                \r\n        );                                                                                             \r\n    }\r\n}\r\n \r\nexport default Movies;\r\n","import React from 'react';\r\n\r\nconst Select = ({name, label , options ,error, ...rest}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n         <label htmlFor={name}>{label}</label>\r\n         <select name={name} id={name} {...rest} className='form-control'>\r\n          <option value=''/>\r\n          {options.map (option => (\r\n              <option key={option._id} value={option._id}>\r\n                  {option.name}\r\n                  </option> \r\n          ))}     \r\n          </select>\r\n          {error && <div className='alert alert-danger'> {error}</div>}\r\n          </div>  \r\n    );\r\n};\r\nexport default Select;\r\n","import React from 'react'; \r\n\r\nconst Input = ({name, label,error , ...rest}) => {\r\n    return (\r\n         <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <input\r\n    {...rest} name={name}\r\n    id={name}\r\n   \r\n    className=\"form-control\" />\r\n    {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n);\r\n};\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Select from '../select';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nclass Form extends Component {\r\n    state ={\r\n        data: {},\r\n        errors: {}\r\n     };\r\n     validate=() => {\r\n        const options= {abortEarly : false};\r\n        const {error}=Joi.validate (this.state.data,this.schema,options);\r\n         if (!error) return null;\r\n         const errors = {};\r\n         for (let item of error.details)\r\n         errors[item.path[0]] =item.message;\r\n         return errors;\r\n     }\r\n \r\n     validateProperty = ({name , value}) => {\r\n        const obj = {[name]: value};\r\n        const schema = {[name]: this.schema[name]};\r\n        const {error} = Joi.validate (obj,schema);   \r\n        return error ? error.details[0].message : null;//tenary operator\r\n        \r\n       };\r\n       handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        this.setState({errors:errors || {} });\r\n        if(errors) return;\r\n        this.doSubmit();\r\n};\r\nhandleChange = ({currentTarget:input}) => {\r\n    const errors={...this.state.errors};\r\n    const errorMessage=this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data={...this.state.data};\r\n    data [input.name] = input.value;\r\n    this.setState({ data , errors });\r\n};\r\n\r\n renderInput(name , label, type='text') { \r\n    const {data , errors} = this.state;\r\n    return (           \r\n            <Input\r\n               type={type} \r\n                name={name} \r\n                value={data [name]} \r\n                label={label}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n                />\r\n    );\r\n            }\r\n            renderButton(label){\r\n                return (\r\n                     <button disabled ={this.validate()} className=\"btn btn-primary\">\r\n                    {label}\r\n                </button>\r\n                );\r\n            }\r\n            renderSelect (name, label , options){\r\n                const { data, errors} = this.state;\r\n                return (\r\n                    <Select\r\n                    name={name}\r\n                    value={data [name]}\r\n                    label={label}\r\n                    options={options}\r\n                    onChange={this.handleChange}\r\n                    error={errors[name]}\r\n                    />\r\n                );\r\n            }\r\n            \r\n            \r\n\r\n            \r\n\r\n       }\r\nexport default Form;","import React from 'react';\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport {getMovie, saveMovie} from \"../services/movieService\";\r\nimport { getGenres } from '../services/genreService';  \r\nclass MovieForm extends Form {\r\n    state = {\r\n        data: {\r\n            title :\"\",\r\n            genreId :\"\",//specifically the genre id\r\n            numberInStock :\"\",\r\n            dailyRentalRate :\"\"\r\n        },\r\n        genres: [],//empty array\r\n        errors: {}\r\n        };\r\n\r\n      schema = {\r\n          _id: Joi.string(),\r\n          title : Joi.string()\r\n          .required()\r\n          .label(\"Title\"),\r\n    genreId : Joi.string()\r\n          .required()\r\n          .label(\"Genre\"),\r\n      numberInStock : Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n     .label(\"Number in Stock\"),  \r\n    dailyRentalRate : Joi.number()\r\n          .required()\r\n          .min(0)\r\n          .max(10)\r\n          .label(\"Daily Rental Rate\"),\r\n      };\r\n      async populateGenres(){\r\n        const{data:genres}= await getGenres();\r\n        this.setState({genres});//update the state\r\n\r\n      }\r\n      async populateMovie() {\r\n        try {\r\n        const movieId= this.props.match.params.id;//reading the id parameter in the route\r\n        if (movieId === \"new\") return;\r\n        \r\n        const { data:movie } = await getMovie (movieId);\r\n        this.setState({ data: this.mapToViewModel(movie) });\r\n}\r\ncatch (ex) {\r\n        if (ex.response && ex.response.status === 404) \r\n        this.props.history.replace (\"/not-found\");//directing the user to /not found if the movie doesn't exist\r\n      }\r\n    }\r\n\r\n      async componentDidMount() {\r\n          await this.populateGenres();\r\n          await this.populateMovie();\r\n      }\r\n          \r\nmapToViewModel(movie) {// model 4 the view\r\n          return {\r\n              _id: movie._id,\r\n              title : movie.title,\r\n              genreId : movie.genre._id,\r\n              numberInStock : movie.numberInStock,\r\n              dailyRentalRate : movie.dailyRentalRate\r\n          };\r\n      }\r\n        doSubmit = async () => {\r\n          await saveMovie (this.state.data);// saveMovie() when the form's submitted\r\n          this.props.history.push (\"/movies\");//2 direct the user 2 /movies\r\n      };\r\n\r\n      render() {\r\n          return( \r\n          <div>\r\n              <h1>Movie Form</h1>\r\n              <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput ('title' ,'Title')}\r\n              {this.renderSelect (\"genreId\", \"Genre\", this.state.genres)}\r\n              {this.renderInput ('numberInStock', 'Number in Stock', 'number')}\r\n              {this.renderInput ('dailyRentalRate', 'Rate')}\r\n              {this.renderButton ('Save')}\r\n              </form>\r\n              </div>\r\n          );\r\n            \r\n\r\n\r\n\r\n          }\r\n      }\r\n\r\n  \r\n\r\nexport default MovieForm;\r\n","import React from 'react';\r\nconst Customers = ()=> {\r\nreturn <h1>Customers</h1>;\r\n};\r\nexport default Customers;\r\n\r\n","import React from 'react';\r\nconst Rentals = ()=> {\r\nreturn <h1>Re\r\n    ntals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from 'react';\r\nconst NotFound = ()=> {\r\nreturn <h1>Not Found</h1>;\r\n};\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nconst NavBar = ({user})=> {\r\nreturn ( <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<Link className=\"navbar-brand\" to=\"/\">\r\n  Vidly\r\n</Link>\r\n  <button className=\"navbar-toggler\" \r\n  type=\"button\" \r\n  data-bs-toggle=\"collapse\" \r\n  data-bs-target=\"#navbarNav\" \r\n  aria-controls=\"navbarNav\" \r\n  aria-expanded=\"false\" \r\n  aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div className=\"navbar-nav\">\r\n    <NavLink  className=\"nav-item nav-link\" to=\"/movies\">\r\n      Movies\r\n    </NavLink>\r\n    <NavLink  className=\"nav-item nav-link\" to=\"/customers\">\r\n     Customers\r\n    </NavLink>\r\n    <NavLink  className=\"nav-item nav-link\" to=\"/rentals\">\r\n     Rentals\r\n    </NavLink>\r\n    {!user && (\r\n    <React.Fragment>\r\n    <NavLink  className=\"nav-item nav-link\" to=\"/login\">\r\n    Login\r\n    </NavLink>\r\n    <NavLink  className=\"nav-item nav-link\" to=\"/register\">\r\n    Register\r\n    </NavLink>\r\n    </React.Fragment>\r\n    )}\r\n\r\n \r\n{user && (\r\n    <React.Fragment>\r\n    <NavLink  className=\"nav-item nav-link\" to=\"/profile\">\r\n{user.name}\r\n    </NavLink>\r\n    <NavLink  className=\"nav-item nav-link\" to=\"/logout\">\r\n    Logout\r\n    </NavLink>\r\n    </React.Fragment>\r\n    )}\r\n    </div>\r\n</div>\r\n</nav>\r\n);\r\n}\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\n \r\n\r\nclass LoginForm extends Form {\r\n    state={\r\n        data:{username:'', password:''},\r\n        errors:{}//every form must the error prpoerty in its object\r\n   };\r\n   schema={\r\n       username: Joi.string()\r\n       .required()\r\n       .label ('Username'),\r\n       password: Joi.string()\r\n       .required()\r\n       .label ('Password')//specific to login' / not resuable\r\n   };\r\n   \r\n       \r\n   \r\n\r\n    //username=React.createRef();\r\n    //componentDidMount() {\r\n        //this.username.current.focus();\r\n    //}\r\n    \r\ndoSubmit = async () => {\r\n    try {\r\n    const {data}= this.state;\r\n    await auth.login (data.username, data.password);\r\n    //const {data:jwt} = await login (data.username, data.password);//2 get json web token in the body of the response \r\n    //localStorage.setItem('token', jwt);//2 parameters:key & value -- accessin the local storage\r\n    //this.props.history.push ('/');//directin' the user 2 the home page\r\n    const {state} = this.props.location;\r\n    window.location = state ? state.from.pathname: '/';\r\n\r\n    //console.log (jwt);\r\n} catch (ex) {\r\n    if (ex.response && ex.response.status === 400) {\r\n    const errors = {...this.state.errors};\r\n    errors.username = ex.response.data;// 2 display the error from the server\r\n    this.setState ({errors});\r\n }\r\n}\r\n};\r\n\r\nrender() { \r\n    if (auth.getCurrentUser()) return <Redirect to='/'/>; \r\n        return ( \r\n           \r\n        <div>\r\n            <h1>Login</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput ('username' ,'Username')}\r\n              {this.renderInput ('password' ,'Password' , 'password')}\r\n              {this.renderButton ('Login')}\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default LoginForm;","import http from './httpService';\r\nimport {apiUrl} from '../config.json';\r\n \r\nconst apiEndpoint =apiUrl + '/users';\r\n\r\nexport function register (user){\r\n    return http.post (apiEndpoint, {\r\n        email:user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport  * as userService from '../services/userService'; \r\nimport auth from '../services/authService';\r\n \r\n\r\nclass RegisterForm extends Form {\r\n    state ={\r\n        data: {username:\"\", password:\"\", name:\"\"},//3 properties\r\n        errors:{}//every form must the error prpoerty in its object\r\n   };\r\n\r\n   schema = {\r\n       username: Joi.string()\r\n       .required()\r\n       .email()\r\n       .label ('Username'),\r\n       password: Joi.string()\r\n       .required()\r\n       .min(5)//minimum of 5 characters\r\n       .label ('Password'),//specific to login' / not resuable\r\n       name: Joi.string()\r\n       .required()\r\n       .label('Name')\r\n   };\r\n   \r\n       \r\n   \r\n\r\n    \r\ndoSubmit = async () => {\r\n    try {// try catch => 2 handle server errors\r\nconst response = await userService.register (this.state.data);\r\nconsole.log (response);\r\nauth.loginWithJwt (response.headers['x-auth-token']);\r\nwindow.location = '/';\r\n}\r\ncatch (ex) {\r\n    if (ex.response && ex.response.status === 400) {\r\n        const errors= {...this.state.errors};\r\n        errors.username= ex.response.data;\r\n        this.setState ({ errors});\r\n        \r\n\r\n    }\r\n}\r\n};\r\n\r\n    render() { \r\n        return ( \r\n        <div>\r\n            <h1>Register</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput ('username' ,'Username')}\r\n              {this.renderInput ('password' ,'Password' , 'password')}\r\n              {this.renderInput('name','Name')}\r\n              {this.renderButton ('Register')}\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nclass Logout extends Component {\r\n componentDidMount() {\r\n     auth.logout();\r\n     \r\n     window.location= '/';\r\n }\r\n  render() {\r\n      return null;\r\n  }\r\n}\r\nexport default Logout;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport  {Route,Redirect} from 'react-router-dom';\r\nimport auth from '../../services/authService';\r\nconst ProtectedRoute = ({ path, component : Component, render , ...rest }) => {\r\n    return (\r\n    <Route\r\n     {...rest}\r\n     render= {props => {\r\n    if (!auth.getCurrentUser()) \r\n    return \r\n    (<Redirect\r\n     to={{ \r\n      pathname: '/login',\r\n      state:{from:props.location}\r\n     }}\r\n     />\r\n    );\r\n     return Component ? <Component {...props} />: render (props);\r\n    }}\r\n    />\r\n );\r\n}\r\nexport default ProtectedRoute;\r\n","import React, { Component } from 'react';\nimport {Route, Redirect, Switch} from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Movies from \"./components/movies\";\nimport MovieForm from './components/movieForm';\nimport Customers from './components/customers';\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport Logout from './components/logout';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {//2 get jwt from the local storage\n   const user = auth.getCurrentUser();\n   this.setState ({user});\n}\n  render(){\n  const {user} = this.state;  \n    return (\n     <React.Fragment>\n       <ToastContainer/>\n     <NavBar user = {user}/>\n      <main className=\"container\">\n        <Switch>\n        <Route path=\"/register\" component={RegisterForm}/>\n        <Route path=\"/login\" component={LoginForm}/>\n        <Route path=\"/logout\" component={Logout}/>\n        <ProtectedRoute \n        path=\"/movies/:id\"\n        component={MovieForm}\n        \n        />  \n        <Route\n         path=\"/movies\" render={props => <Movies {...props} user={this.state.user}/>}/>\n        <Route path=\"/customers\" component={Customers}></Route>\n        <Route path=\"/rentals\" component={Rentals}></Route>\n        <Route path=\"/not-found\" component={NotFound}></Route>\n        <Redirect from=\"/\" exact to=\"/movies\"/>\n        <Redirect to=\"/not-found\" />\n        </Switch>\n        </main>\n        </React.Fragment>\n        \n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}